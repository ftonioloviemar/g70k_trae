import os
from api_brasil import APIBrasilClient, VehiclesApi
from api_brasil.features.vehicles import Endpoints
import json
from dotenv import load_dotenv

# Carrega vari√°veis de ambiente do arquivo .env
load_dotenv()

def test_api_brasil_with_env():
    """
    Teste da API Brasil usando vari√°veis de ambiente.
    
    Configure as seguintes vari√°veis no arquivo .env:
    API_BRASIL_BEARER_TOKEN=seu_bearer_token_aqui
    API_BRASIL_DEVICE_TOKEN=seu_device_token_aqui
    
    Ou configure as vari√°veis de ambiente do sistema.
    """
    
    # Obt√©m tokens das vari√°veis de ambiente
    bearer_token = os.getenv('API_BRASIL_BEARER_TOKEN')
    device_token = os.getenv('API_BRASIL_DEVICE_TOKEN')
    
    # Verifica se os tokens foram configurados
    if not bearer_token or not device_token:
        print("‚ùå Tokens n√£o configurados!")
        print("\nConfigure as vari√°veis de ambiente:")
        print("API_BRASIL_BEARER_TOKEN=seu_bearer_token")
        print("API_BRASIL_DEVICE_TOKEN=seu_device_token")
        print("\nOu adicione no arquivo .env:")
        print("API_BRASIL_BEARER_TOKEN=seu_bearer_token")
        print("API_BRASIL_DEVICE_TOKEN=seu_device_token")
        return
    
    # Placa para teste (pode ser configurada via env tamb√©m)
    placa = os.getenv('TEST_VEHICLE_PLATE', 'ABC-1234')
    
    try:
        print(f"üîë Usando tokens das vari√°veis de ambiente")
        print(f"üöó Testando com placa: {placa}")
        print("-" * 50)
        
        # Instancia o client da APIBrasil
        api_brasil_client = APIBrasilClient(bearer_token=bearer_token)
        
        # Usando a API de Ve√≠culos
        vehicles_api = VehiclesApi(api_brasil_client=api_brasil_client, device_token=device_token)
        vehicles_api.set_plate(plate=placa)
        
        # Consulta os dados do ve√≠culo
        response, status_code = vehicles_api.consulta(vechiles_api_endpoint=Endpoints.dados)
        
        print(f"Status Code: {status_code}")
        print(f"Response:")
        
        if isinstance(response, str):
            try:
                response_data = json.loads(response)
                print(json.dumps(response_data, indent=2, ensure_ascii=False))
            except json.JSONDecodeError:
                print(response)
        else:
            print(json.dumps(response, indent=2, ensure_ascii=False))
        
        # An√°lise do resultado
        if status_code == 200:
            print("\n‚úÖ Consulta realizada com sucesso!")
            if isinstance(response, str):
                try:
                    data = json.loads(response)
                    if not data.get('is_error', False):
                        print("üìä Dados do ve√≠culo obtidos com sucesso!")
                    else:
                        print("‚ö†Ô∏è API retornou erro nos dados")
                except:
                    pass
        elif status_code == 401:
            print("\n‚ùå Erro de autentica√ß√£o. Verifique seus tokens.")
        elif status_code == 402:
            print("\nüí≥ Cr√©ditos insuficientes na conta API Brasil.")
        elif status_code == 404:
            print("\nüîç Dados n√£o encontrados para esta placa.")
        elif status_code == 429:
            print("\n‚è∞ Limite de requisi√ß√µes excedido. Aguarde um momento.")
        else:
            print(f"\n‚ö†Ô∏è Resposta inesperada: {status_code}")
            
    except Exception as e:
        print(f"‚ùå Erro durante a execu√ß√£o: {str(e)}")
        print("\nVerifique se:")
        print("1. O pacote api-brasil est√° instalado: uv add api-brasil")
        print("2. O pacote python-dotenv est√° instalado: uv add python-dotenv")
        print("3. Seus tokens est√£o corretos nas vari√°veis de ambiente")
        print("4. Voc√™ tem cr√©ditos na API Brasil")
        print("5. A placa est√° no formato correto (ABC-1234)")

def show_env_example():
    """Mostra exemplo de arquivo .env"""
    print("üìù Exemplo de arquivo .env:")
    print("-" * 30)
    print("# Tokens da API Brasil")
    print("API_BRASIL_BEARER_TOKEN=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...")
    print("API_BRASIL_DEVICE_TOKEN=seu_device_token_aqui")
    print("")
    print("# Placa para teste (opcional)")
    print("TEST_VEHICLE_PLATE=ABC-1234")
    print("-" * 30)
    print("\nüí° Dica: Nunca commite o arquivo .env no reposit√≥rio!")
    print("Adicione .env no seu .gitignore")

if __name__ == "__main__":
    print("üáßüá∑ Teste da API Brasil com Vari√°veis de Ambiente")
    print("=" * 60)
    
    # Verifica se deve mostrar exemplo do .env
    if '--show-env' in os.sys.argv:
        show_env_example()
    else:
        test_api_brasil_with_env()
        print("\nüí° Use --show-env para ver exemplo de configura√ß√£o")